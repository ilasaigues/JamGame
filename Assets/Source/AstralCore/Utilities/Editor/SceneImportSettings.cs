using System.IO;
using System.Linq;
using UnityEditor;
using UnityEngine;
using UnityEngine.SceneManagement;

namespace AstralCore
{
#if UNITY_EDITOR
    public class SceneImportSettings
    {
        [MenuItem("Tools/Populate SceneReferences")]
        static void PopulateSceneReferences()
        {
            var scenesInBuild = AssetDatabase.GetAllAssetPaths().Where(p => p.Contains(".unity") //filter for scene assets only
            && SceneUtility.GetBuildIndexByScenePath(p) != -1); //filter again for scenes in the build index

            var tab = "    ";

            var includeText = "";

            foreach (var scenePath in scenesInBuild)
            {
                var sceneName = scenePath.Split("/").Last().Split(".")[0];
                includeText += $"{tab}public static SceneReference SCENE_{sceneName} = new SceneReference(\"{sceneName}\");\n";
            }
            string pregenCode =
            "//THIS CODE IS AUTOGENERATED, DO NOT OVERRIDE\n" +
            "public class SceneReference\n" +
            "{\n" +
            "    public string SceneName;\n" +
            "    public SceneReference(string sceneName)\n" +
            "    {\n" +
            "        SceneName = sceneName;\n" +
            "    }\n" +
            "    //AUTOGENERATED\n" +
                includeText +
            "}\n";

            {
                using StreamWriter outfile = new("Assets/Source/AstralCore/Utilities/SceneReference.cs");
                outfile.WriteLine(pregenCode);
            }

            AssetDatabase.SaveAssets();
            AssetDatabase.Refresh();
        }
    }

#endif

}